{
"settings": {
"totalTime": "00:20:00"
},
"questions": [
{
"id": "q1",
"question": "Which command shows the current database in the MongoDB shell?",
"options": ["show dbs", "db", "db.getName()", "use"],
"answer": "db",
"category": "Easy"
},
{
"id": "q2",
"question": "Which method inserts a single document into a collection in MongoDB?",
"options": ["insertOne()", "save()", "insertMany()", "add()"],
"answer": "insertOne()",
"category": "Easy"
},
{
"id": "q3",
"question": "Which operator is used to match documents where a field equals a value?",
"options": ["$eq", "$match", "$same", "$is"],
"answer": "$eq",
"category": "Easy"
},
{
"id": "q4",
"question": "Which command switches to a database (or creates it if it doesn't exist) in the shell?",
"options": ["use dbname", "switch dbname", "connect dbname", "open dbname"],
"answer": "use dbname",
"category": "Easy"
},
{
"id": "q5",
"question": "Which MongoDB method retrieves documents with a query filter?",
"options": ["find()", "get()", "select()", "query()"],
"answer": "find()",
"category": "Easy"
},
{
"id": "q6",
"question": "Which data format does MongoDB use to store documents?",
"options": ["JSON", "BSON", "XML", "YAML"],
"answer": "BSON",
"category": "Easy"
},
{
"id": "q7",
"question": "Which command lists collections in the current database?",
"options": ["show collections", "list collections", "db.collections()", "ls collections"],
"answer": "show collections",
"category": "Easy"
},
{
"id": "q8",
"question": "Which Mongoose method is used to define a schema?",
"options": ["mongoose.Schema()", "mongoose.model()", "mongoose.connect()", "mongoose.create()"],
"answer": "mongoose.Schema()",
"category": "Easy"
},
{
"id": "q9",
"question": "Which MongoDB shell command displays help for a collection?",
"options": ["db.collection.help()", "db.collection.info()", "help collection", "show help collection"],
"answer": "db.collection.help()",
"category": "Easy"
},
{
"id": "q10",
"question": "Which method updates a single document matching a filter?",
"options": ["updateOne()", "updateMany()", "replace()", "modify()"],
"answer": "updateOne()",
"category": "Easy"
},
{
"id": "q11",
"question": "Which CRUD operation corresponds to the HTTP POST method when building REST APIs with MongoDB backend?",
"options": ["Create", "Read", "Update", "Delete"],
"answer": "Create",
"category": "Medium"
},
{
"id": "q12",
"question": "Which aggregation stage groups documents by a specified expression?",
"options": ["$group", "$match", "$project", "$sort"],
"answer": "$group",
"category": "Medium"
},
{
"id": "q13",
"question": "Which index type is best for full-text search in MongoDB?",
"options": ["text index", "hashed index", "compound index", "sparse index"],
"answer": "text index",
"category": "Medium"
},
{
"id": "q14",
"question": "Which operator is used to perform a left outer join in aggregation?",
"options": ["$lookup", "$join", "$merge", "$unwind"],
"answer": "$lookup",
"category": "Medium"
},
{
"id": "q15",
"question": "Which Mongoose method compiles a schema into a model?",
"options": ["mongoose.model()", "Schema.compile()", "mongoose.createModel()", "new Model()"],
"answer": "mongoose.model()",
"category": "Medium"
},
{
"id": "q16",
"question": "Which command shows current replica set configuration in the MongoDB shell?",
"options": ["rs.conf()", "rs.status()", "replSet.getConfig()", "rs.config()"],
"answer": "rs.conf()",
"category": "Medium"
},
{
"id": "q17",
"question": "Which aggregation stage reshapes each document in the stream, specifying the fields to include or exclude?",
"options": ["$project", "$group", "$match", "$limit"],
"answer": "$project",
"category": "Medium"
},
{
"id": "q18",
"question": "Which index improves equality query performance for a single field?",
"options": ["Single-field index", "Multikey index", "Geospatial index", "Wildcard index"],
"answer": "Single-field index",
"category": "Medium"
},
{
"id": "q19",
"question": "Which operator filters documents in an aggregation pipeline?",
"options": ["$match", "$filter", "$where", "$cond"],
"answer": "$match",
"category": "Medium"
},
{
"id": "q20",
"question": "Which MongoDB command removes a collection from the database?",
"options": ["db.collection.drop()", "db.collection.remove()", "db.collection.delete()", "drop.collection()"],
"answer": "db.collection.drop()",
"category": "Medium"
},
{
"id": "q21",
"question": "Which option should you set on an index to ensure it only references documents where the indexed field exists?",
"options": ["sparse: true", "unique: true", "background: true", "expireAfterSeconds"],
"answer": "sparse: true",
"category": "Medium"
},
{
"id": "q22",
"question": "Which command starts the MongoDB server daemon?",
"options": ["mongod", "mongo", "mongos", "mongodb-start"],
"answer": "mongod",
"category": "Medium"
},
{
"id": "q23",
"question": "Which aggregation stage deconstructs an array field from the input documents to output a document for each element?",
"options": ["$unwind", "$split", "$explode", "$arrayElemAt"],
"answer": "$unwind",
"category": "Medium"
},
{
"id": "q24",
"question": "Which Mongoose feature enforces a schema on top of MongoDB's flexible documents?",
"options": ["Schemas", "Indexes", "Validators", "Hooks"],
"answer": "Schemas",
"category": "Medium"
},
{
"id": "q25",
"question": "Which operator is used to update only specific fields in a document?",
"options": ["$set", "$replace", "$update", "$inc"],
"answer": "$set",
"category": "Hard"
},
{
"id": "q26",
"question": "Which command provides diagnostic and status information for a replica set?",
"options": ["rs.status()", "rs.info()", "db.status()", "repl.status()"],
"answer": "rs.status()",
"category": "Hard"
},
{
"id": "q27",
"question": "Which aggregation operator calculates the average of numeric values for a group?",
"options": ["$avg", "$mean", "$sum", "$accumulator"],
"answer": "$avg",
"category": "Hard"
},
{
"id": "q28",
"question": "Which feature in MongoDB enables horizontal scaling by distributing data across shards?",
"options": ["Sharding", "Replication", "Clustering", "Partitioning"],
"answer": "Sharding",
"category": "Hard"
},
{
"id": "q29",
"question": "Which write concern ensures acknowledgement that data has been written to the primary and replicated to a specified number of secondaries?",
"options": ["{ w: 'majority' }", "{ w: 0 }", "{ w: 1 }", "{ w: 'primary' }"],
"answer": "{ w: 'majority' }",
"category": "Hard"
},
{
"id": "q30",
"question": "Which MongoDB command starts the mongos query router used in sharded clusters?",
"options": ["mongos", "mongod --shard", "mongo --router", "mongosh-router"],
"answer": "mongos",
"category": "Hard"
},
{
"id": "q31",
"question": "Which aggregation stage sorts the documents in the pipeline?",
"options": ["$sort", "$order", "$arrange", "$sequence"],
"answer": "$sort",
"category": "Hard"
},
{
"id": "q32",
"question": "Which operator is used to add a computed field to documents in aggregation?",
"options": ["$addFields", "$compute", "$setField", "$projectField"],
"answer": "$addFields",
"category": "Hard"
},
{
"id": "q33",
"question": "Which MongoDB feature allows executing multi-document transactions with ACID guarantees (from v4.0)?",
"options": ["Replica set transactions", "Sharded transactions", "Single-document transactions", "Local transactions"],
"answer": "Replica set transactions",
"category": "Hard"
},
{
"id": "q34",
"question": "Which index type uses a hashed value of the field and is useful for shard key hashing?",
"options": ["hashed index", "compound index", "text index", "geoHaystack index"],
"answer": "hashed index",
"category": "Hard"
},
{
"id": "q35",
"question": "Which aggregation operator performs a left outer join across collections and lets you pipeline the joined documents?",
"options": ["$lookup", "$graphLookup", "$join", "$merge"],
"answer": "$lookup",
"category": "Hard"
},
{
"id": "q36",
"question": "Which command in MongoDB shell removes all documents from a collection but preserves indexes?",
"options": ["db.collection.deleteMany({})", "db.collection.drop()", "db.collection.removeAll()", "db.collection.clear()"],
"answer": "db.collection.deleteMany({})",
"category": "Hard"
},
{
"id": "q37",
"question": "Which Atlas feature simplifies global distribution and low-latency reads by directing reads to the nearest replica set member?",
"options": ["Global clusters (Zone sharding)", "Multi-cloud peering", "Serverless instances", "Data federation"],
"answer": "Global clusters (Zone sharding)",
"category": "Hard"
},
{
"id": "q38",
"question": "Which query operator matches documents where a field's value is in a specified array of values?",
"options": ["$in", "$all", "$exists", "$nin"],
"answer": "$in",
"category": "Hard"
},
{
"id": "q39",
"question": "Which pipeline stage writes the aggregation results to a collection?",
"options": ["$out", "$merge", "$write", "$store"],
"answer": "$out",
"category": "Hard"
},
{
"id": "q40",
"question": "Which operator condition allows matching array elements that meet multiple criteria within a single $elemMatch?",
"options": ["$elemMatch", "$all", "$size", "$slice"],
"answer": "$elemMatch",
"category": "Hard"
}
]
}
